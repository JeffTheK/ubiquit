fun void swap(number& x, number& y) {
     number tmp = x;
     x = y;
     y = tmp;
}

fun void quicksort(number[]& arr, number begin, number end, number(number, number) comp) {
     if (end - begin < 2)
     return;
	
     number pivot = arr[end-1];

     number i = begin;
	
	for (number j = begin; j < end-1; ++j)
		if (comp(arr[j], pivot))
			swap(&arr[i++], &arr[j]);
	
	swap (&arr[i], &arr[end-1]);

	quicksort(&arr, begin, i, comp);
	quicksort(&arr, i+1, end, comp);
}

fun void sort(number[]& arr, number(number, number) comp) {
     quicksort(&arr, 0, sizeof(arr), comp);
}


fun number less(number x, number y) {
     return x < y;
}

public fun void main() {
	number[] arr;
	
	for (number i = 0; i < 100; ++i) {
		arr[sizeof(arr)] = rnd(100);
	}
	
	trace(tostring(arr));
	
	sort(&arr, less);
	
	trace(tostring(arr));
	
	sort(&arr, greater);
	
	trace(tostring(arr));
}
